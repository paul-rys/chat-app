import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

import React, { useMemo, useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import firebase from '../firebase/index';

import { TextField } from '@mui/material';
import { throttle } from 'lodash';
import { push } from 'firebase/database';

export default function Home() {
  const router = useRouter();
  const [isUser, setIsUser] = useState(false);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [fullName, setFullName] = useState("");
  const [number, setNumber] = useState("");
  const [currUID, setCurrUID] = useState("");

  useEffect(() => {
    firebase().auth.onAuthStateChanged((user) => {
      if (user) {
        setCurrUID(user.uid);
        setIsUser(true);
        console.log(user.uid);
      } else {

        console.log("not a user");
      }
    });
  }, [])

  const logInUser = (userEmail, userPassword) => {
    const { auth, signInWithEmailAndPassword } = firebase();
    signInWithEmailAndPassword(auth, userEmail, userPassword).then((userCredential) => {
        const user = userCredential.user;
        console.log({user});
        setIsUser(true);
        setCurrUID(user.uid);
    }).catch(e => console.error(e))

    setFullName("")
    setNumber("")
  }

  useEffect(() => {
    logInUser(email, password)
  }, [email, password ])


  const uiDispatcher = () => {
      if (isUser) {
        return (
          <> 
              <TextField 
                id = 't1'
                label = 'full name'
                variant = 'outlined'
                onChange = {(e) => setFullName(e.target.value)}
              /> 
              

              <TextField 
                id = 't2'
                label = 'number'
                variant = 'outlined'
                onChange = {(event) => {
                    setNumber(event.target.value);
                }}
              /> 


              <button 
                style={{padding: 20}} 
                title={isUser ? 'Logout' : 'Create Details'} 
                onClick = {async () => {
                  if (fullName !== "" && number !== "") {
                    const {db, ref, set} = firebase();
                    await set(ref(db, "users/" + currUID), {
                      fullName : fullName,
                      mobile: number,
                      uid: currUID
                    })
                  } else {
                    alert("fill up the form please!")
                  }
              }}>
                <h1> Create Details </h1>
              </button>

              <button 
                style={{padding: 20}} 
                title={isUser ? 'Logout' : 'Create Details'} 
                onClick = {async () => {
                  router.push("/gcs")
              }}>
                <h1> Go to available gcs </h1>
              </button>
          </>
        )
      }

        return (
            <> 
                <TextField 
                  id = 't1'
                  label = 'email'
                  variant = 'outlined'
                  onChange = {e => {
                      setEmail(e.target.value);
                    }
                    
                  }
                /> 
                
  
                <TextField 
                  id = 't2'
                  label = 'password'
                  variant = 'outlined'
                  onChange = {e => {
                      setPassword(e.target.value);
                  }}
                /> 
  
  
                <button 
                  style={{padding: 20}} 
                  title={isUser ? 'Logout' : 'Log In'} 
                  onClick = {async () => {
                    if (fullName !== "" && number !== "") {
                        logInUser(email, password)
                      }
                    }}>

                  <h1> {isUser ? 'Logout' : 'Log In'} </h1>

                </button>
            </>
        );
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>


        {uiDispatcher()}

        <button 
          style={{padding: 20}} 
          title={isUser ? 'Logout' : 'Create Details'} 
          onClick = {() => {
            if (isUser) {
                firebase().auth.signOut();
                setIsUser(false);
            } else {
              router.push("/dashboard");
            }
        }}>
          <h1> {isUser ? 'Logout' : 'Create User'} </h1>
        </button>

      </main>
    </div>
  )
}
